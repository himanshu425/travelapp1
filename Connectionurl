package tr.mapsdemo;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.MalformedURLException;
import java.net.Proxy;
import java.net.URL;
import java.util.Properties;

/**
 * Created by 1257075 on 6/24/2016.
 */
public class ConnectionUrl
{
    URL url=null;
    HttpURLConnection httpURLConnection=null;
    String proxy="proxy.mydomain.com",port="8080";
    StringBuilder stringBuilder=new StringBuilder();

    public String getData(String s)
    {
        try {
            url=new URL(s);
            Properties systemProperties=System.getProperties();
            systemProperties.setProperty("http.proxyHost",proxy);
            systemProperties.setProperty("http.proxyPort",port);
            Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress("172.26.49.179", 8080));
           httpURLConnection =(HttpURLConnection)url.openConnection(proxy);
            httpURLConnection.setDoOutput(true);
            httpURLConnection.setDoInput(true);
            httpURLConnection.setRequestMethod("GET");
            httpURLConnection.setRequestProperty("Content-Type", "application/json");
            httpURLConnection.setReadTimeout(30*1000);

            int responsecode=httpURLConnection.getResponseCode();

            if(responsecode==httpURLConnection.HTTP_OK)
            {
                String line;
                InputStream in=(httpURLConnection.getInputStream());
                BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(in));
                while((line=bufferedReader.readLine())!=null)
                {
                    stringBuilder.append(line);

                }

            }
            else
            {
                String line;
                BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(httpURLConnection.getErrorStream()));
                while((line=bufferedReader.readLine())!=null)
                {
                    stringBuilder.append(line);

                }

            }


        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        String string=stringBuilder!=null?stringBuilder.toString():"";
        return string;
    }

    public Bitmap getImage(String s)
    {

        try {
            Bitmap imageView;
            url=new URL(s);
            Properties systemProperties=System.getProperties();
            systemProperties.setProperty("http.proxyHost",proxy);
            systemProperties.setProperty("http.proxyPort",port);
            Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress("172.26.53.11", 8080));
            httpURLConnection=(HttpURLConnection)url.openConnection();
            httpURLConnection.setDoInput(true);
            httpURLConnection.setDoOutput(true);
            httpURLConnection.setRequestMethod("GET");
            httpURLConnection.setReadTimeout(30*1000);

            int responsecode=httpURLConnection.getResponseCode();
            if(responsecode==HttpURLConnection.HTTP_OK)
            {
                imageView= BitmapFactory.decodeStream(httpURLConnection.getInputStream());
                return imageView;

            }
            else{
                return null;
            }

        } catch (MalformedURLException e) {
            e.printStackTrace();
            return null;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }



    }



}
